{"ast":null,"code":"import * as types from './types'; // INITIALIZES CLOCK ON SERVER\n\nexport const serverRenderClock = () => dispatch => dispatch({\n  type: types.TICK,\n  payload: {\n    light: false,\n    ts: Date.now()\n  }\n}); // INITIALIZES CLOCK ON CLIENT\n\nexport const startClock = () => dispatch => setInterval(() => {\n  dispatch({\n    type: types.TICK,\n    payload: {\n      light: true,\n      ts: Date.now()\n    }\n  });\n}, 1000); // INCREMENT COUNTER BY 1\n\nexport const incrementCount = () => ({\n  type: types.INCREMENT\n}); // DECREMENT COUNTER BY 1\n\nexport const decrementCount = () => ({\n  type: types.DECREMENT\n}); // RESET COUNTER\n\nexport const resetCount = () => ({\n  type: types.RESET\n});","map":{"version":3,"sources":["F:/projects/fend/deliciosas-recetas/actions.js"],"names":["types","serverRenderClock","dispatch","type","TICK","payload","light","ts","Date","now","startClock","setInterval","incrementCount","INCREMENT","decrementCount","DECREMENT","resetCount","RESET"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB,C,CAEA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,QAAD,IACrCA,QAAQ,CAAC;AACPC,EAAAA,IAAI,EAAEH,KAAK,CAACI,IADL;AAEPC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAApB;AAFF,CAAD,CADH,C,CAMP;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAOR,QAAD,IAC9BS,WAAW,CAAC,MAAM;AAChBT,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEH,KAAK,CAACI,IAAd;AAAoBC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAAnB;AAA7B,GAAD,CAAR;AACD,CAFU,EAER,IAFQ,CADN,C,CAKP;;AACA,OAAO,MAAMG,cAAc,GAAG,OAAO;AAAET,EAAAA,IAAI,EAAEH,KAAK,CAACa;AAAd,CAAP,CAAvB,C,CAEP;;AACA,OAAO,MAAMC,cAAc,GAAG,OAAO;AAAEX,EAAAA,IAAI,EAAEH,KAAK,CAACe;AAAd,CAAP,CAAvB,C,CAEP;;AACA,OAAO,MAAMC,UAAU,GAAG,OAAO;AAAEb,EAAAA,IAAI,EAAEH,KAAK,CAACiB;AAAd,CAAP,CAAnB","sourcesContent":["import * as types from './types'\n\n// INITIALIZES CLOCK ON SERVER\nexport const serverRenderClock = () => (dispatch) =>\n  dispatch({\n    type: types.TICK,\n    payload: { light: false, ts: Date.now() },\n  })\n\n// INITIALIZES CLOCK ON CLIENT\nexport const startClock = () => (dispatch) =>\n  setInterval(() => {\n    dispatch({ type: types.TICK, payload: { light: true, ts: Date.now() } })\n  }, 1000)\n\n// INCREMENT COUNTER BY 1\nexport const incrementCount = () => ({ type: types.INCREMENT })\n\n// DECREMENT COUNTER BY 1\nexport const decrementCount = () => ({ type: types.DECREMENT })\n\n// RESET COUNTER\nexport const resetCount = () => ({ type: types.RESET })\n"]},"metadata":{},"sourceType":"module"}