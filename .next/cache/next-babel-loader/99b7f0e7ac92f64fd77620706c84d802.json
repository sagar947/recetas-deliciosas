{"ast":null,"code":"import { combineReducers } from 'redux';\nimport * as types from './types'; // COUNTER REDUCER\n\nvar counterReducer = function counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type;\n\n  switch (type) {\n    case types.INCREMENT:\n      return state + 1;\n\n    case types.DECREMENT:\n      return state - 1;\n\n    case types.RESET:\n      return 0;\n\n    default:\n      return state;\n  }\n}; // INITIAL TIMER STATE\n\n\nvar initialTimerState = {\n  lastUpdate: 0,\n  light: false\n}; // TIMER REDUCER\n\nvar timerReducer = function timerReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialTimerState;\n\n  var _ref2 = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref2.type,\n      payload = _ref2.payload;\n\n  switch (type) {\n    case types.TICK:\n      return {\n        lastUpdate: payload.ts,\n        light: !!payload.light\n      };\n\n    default:\n      return state;\n  }\n}; // COMBINED REDUCERS\n\n\nvar reducers = {\n  counter: counterReducer,\n  timer: timerReducer\n};\nexport default combineReducers(reducers);","map":{"version":3,"sources":["F:/projects/fend/deliciosas-recetas/reducers.js"],"names":["combineReducers","types","counterReducer","state","type","INCREMENT","DECREMENT","RESET","initialTimerState","lastUpdate","light","timerReducer","payload","TICK","ts","reducers","counter","timer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB,C,CAEA;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAyB;AAAA,MAAxBC,KAAwB,uEAAhB,CAAgB;;AAAA;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAC9C,UAAQA,IAAR;AACE,SAAKH,KAAK,CAACI,SAAX;AACE,aAAOF,KAAK,GAAG,CAAf;;AACF,SAAKF,KAAK,CAACK,SAAX;AACE,aAAOH,KAAK,GAAG,CAAf;;AACF,SAAKF,KAAK,CAACM,KAAX;AACE,aAAO,CAAP;;AACF;AACE,aAAOJ,KAAP;AARJ;AAUD,CAXD,C,CAaA;;;AACA,IAAMK,iBAAiB,GAAG;AACxBC,EAAAA,UAAU,EAAE,CADY;AAExBC,EAAAA,KAAK,EAAE;AAFiB,CAA1B,C,CAKA;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAkD;AAAA,MAAjDR,KAAiD,uEAAzCK,iBAAyC;;AAAA;AAAA,MAApBJ,IAAoB,SAApBA,IAAoB;AAAA,MAAdQ,OAAc,SAAdA,OAAc;;AACrE,UAAQR,IAAR;AACE,SAAKH,KAAK,CAACY,IAAX;AACE,aAAO;AACLJ,QAAAA,UAAU,EAAEG,OAAO,CAACE,EADf;AAELJ,QAAAA,KAAK,EAAE,CAAC,CAACE,OAAO,CAACF;AAFZ,OAAP;;AAIF;AACE,aAAOP,KAAP;AAPJ;AASD,CAVD,C,CAYA;;;AACA,IAAMY,QAAQ,GAAG;AACfC,EAAAA,OAAO,EAAEd,cADM;AAEfe,EAAAA,KAAK,EAAEN;AAFQ,CAAjB;AAKA,eAAeX,eAAe,CAACe,QAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux'\nimport * as types from './types'\n\n// COUNTER REDUCER\nconst counterReducer = (state = 0, { type }) => {\n  switch (type) {\n    case types.INCREMENT:\n      return state + 1\n    case types.DECREMENT:\n      return state - 1\n    case types.RESET:\n      return 0\n    default:\n      return state\n  }\n}\n\n// INITIAL TIMER STATE\nconst initialTimerState = {\n  lastUpdate: 0,\n  light: false,\n}\n\n// TIMER REDUCER\nconst timerReducer = (state = initialTimerState, { type, payload }) => {\n  switch (type) {\n    case types.TICK:\n      return {\n        lastUpdate: payload.ts,\n        light: !!payload.light,\n      }\n    default:\n      return state\n  }\n}\n\n// COMBINED REDUCERS\nconst reducers = {\n  counter: counterReducer,\n  timer: timerReducer,\n}\n\nexport default combineReducers(reducers)\n"]},"metadata":{},"sourceType":"module"}