{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as types from './types';\nimport axios from 'axios';\nexport var fetchRecipes = function fetchRecipes(page) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"http://www.recipepuppy.com/api?p=\".concat(page)).then(function (response) {\n                console.log(response.data.results);\n              })[\"catch\"](function (error) {\n                console.log(error);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["F:/projects/fend/deliciosas-recetas/actions.js"],"names":["types","axios","fetchRecipes","page","dispatch","get","then","response","console","log","data","results","error"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD;AAAA;AAAA,wEAAU,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAC9BH,KAAK,CAACI,GAAN,4CAA8CF,IAA9C,GACHG,IADG,CACE,UAAAC,QAAQ,EAAI;AAChBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,OAA1B;AACD,eAHG,WAIG,UAAAC,KAAK,EAAI;AACdJ,gBAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,eANG,CAD8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["import * as types from './types'\nimport axios from 'axios';\n\nexport const fetchRecipes = (page) => async (dispatch) => {\n  await axios.get(`http://www.recipepuppy.com/api?p=${page}`)\n    .then(response => {\n      console.log(response.data.results)\n    })\n    .catch(error => {\n      console.log(error)\n    })\n}\n"]},"metadata":{},"sourceType":"module"}